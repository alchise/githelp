MANEJO DE GIT:

COMANDOS BASICOS:

ls 	    : listar archivos en una carpeta
ls -l 	: listar archivos con propiedades y usuarios
ls -la 	: listar archivos ocultos con propiedades y usuarios
cd 	    : entrar en una carpeta
cd .. 	: regresar a la anterior carpeta
pwd 	: conocer la ruta en donde se está
mkdir "nombrecarpeta" 	: crear una carpeta

CONFIGURAR  GIT:

# configurar nombre
git config --global user.name "alchise"

# configurar correo
git config --global user.email "alchise@gmail.com"

# iniciar Git en una carpeta
git init

# configurar rama principal global a main
git config --global init.defaultBranch main

# cambiar el nombre de la rama master inicial a main
git branch -M main

EMPEZAR CON GIT:

# ver el estado de git en la carpeta
git status

# añadir archivos a seguimientos
git add .

# realizar un commit
git commit -m "primer commit"

# verificar los commits
git log
git log --graph
git log --graph --pretty=oneline
git log --graph --decorate --all --oneline

# crear un alias de una linea comandos de git
git config --global alias.logtree "log --graph --decorate --all --oneline"

# creamos un archivo para ignorar otros archivos en los commits
touch .gitignore
q
# dentro del archivo
**/<archivo>

# ver modificaciones en archivos
git diff

# saltar entre commits por su ID
git checkout 6c56141 # HEAD esta ahora en el commit de ID 6c56141

# borrar todos los commits por encima de un ID especifico
# funciona adelante y atras
git reset --hard <ID>

# ver todo el historial de commits
git reflog

# asignar nombres a los commits
git tag <nombre>

# ver los tags de los commits
git tag

# trabajo con ramas 'branch'
# crear ramas
git branch <rama>

# cambiar de rama
git switch <rama> # local? 
git checkout <rama> # remoto? descarga todo?

# hacer commit temporal sin afectar la rama
git stash # luego cambiar de rama

# listar stash
git stash list

# volver a la rama origen y recuperar estado de la rama
git stash pop

# eliminar un stash si es necesario
git stash drop

# verificar conflictos entre ramas
git diff <rama>

# eliminar una rama que ya se ha ido a produccion
gif branch -d <rama>

# forzar eliminacion de una rama
gif branch -D <rama>
