AUTENTICACION:

Comprobar tus claves SSH existentes:

# Antes de generar una nueva clave SSH, debes comprobar la máquina local en busca de claves existentes.

# lista los archivos en la carpeta .ssh si existe
        ls -al ~/.ssh

# En caso de que no exista se debe crear el directorio

        mkdir .ssh
        cd .ssh

# Pega el siguiente texto, que sustituye tu dirección de correo electrónico en GitHub.

        ssh-keygen -t ed25519 -C "alchise@gmail.com"

Enter file in which to save the key (/home/alchise/.ssh/id_ed25519): id_rsa

# Antes de agregar una llave SSH nueva al ssh-agent para que administre tus llaves, debes haber verificado si habían llaves SSH existentes y haber generado una llave SSH nueva.

    Inicia el agente SSH en segundo plano.

    $ eval "$(ssh-agent -s)"
    > Agent pid 59566

# abre o crear el archivo config

    cat ~/.ssh/config
    touch ~/.ssh/config

# agregar las siguientes lineas a config    

    Host *.github.com
    AddKeysToAgent yes
    IdentityFile ~/.ssh/id_ed25519

# Agregar tu clave SSH al ssh-agent

    ssh-add ~/.ssh/id_ed25519

# agregar tu clave publica en github >>>> copiar y pegar en github
    cat ~/.ssh/id_ed25519.pub 

# probar que podemos conectarnos a github
    
    $ ssh -T git@github.com

# Comenzar con GitHub, subir proyecto a repositorio remoto

    git init
    git add .
    git commit -m "Primer commit"
    git remote add origin https://github.com/alchise/githelp.git
    git branch -M main
    git push -u origin main

# Sincronizar local y remoto, bajar cambios hechos en remoto

# descarga historial sin los cambios
    git fetch origin main

# descarga historial con los cambios
  
    git pull origin main   
    
# confirmar merge por defecto

    git config pull.rebase false 

MODIFICACION HECHA EN LA RAMA1     